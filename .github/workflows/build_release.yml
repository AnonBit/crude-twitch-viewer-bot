name: Build and Release

on:
  push:
    tags:
      - "v*"
env:
  PLAYWRIGHT_BROWSERS_PATH: 0

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}

    name: Build exe and draft release
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: pip install poetry

    - name: Get packages via poetry
      run: poetry install

    - name: Create date env variable
      shell: bash
      run: |
        echo "today=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Get CTVBot version number
      uses: SebRollen/toml-action@v1.0.0
      id: read_toml
      with:
        file: 'pyproject.toml'
        field: 'tool.poetry.version'

    - name: Build executable
      run: |
        poetry run pyinstaller main_gui.py --onefile --add-binary "ctvb_logo.ico;." --add-binary "pyproject.toml;." --icon ctvb_logo.ico --name CTVBot_${{steps.read_toml.outputs.value}}_${{env.today}}
        rm ./proxy/proxy.py
        mv ./proxy/ ./dist/

    - name: Zip executable
      uses: vimtor/action-zip@v1
      with:
        files: dist/
        dest: CTVBot_${{steps.read_toml.outputs.value}}_${{env.today}}.zip

    - name: Create draft release with artifact
      uses: softprops/action-gh-release@v1
      with:
        name: CTVBot GUI ${{github.ref_name}}
        body_path: docs/release_template_text.md
        prerelease: false
        draft: true
        files: |
          CTVBot_${{steps.read_toml.outputs.value}}_${{env.today}}.zip